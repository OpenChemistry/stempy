name: docker

on:
  push:
    branches:
      # - "master"
      - "new-docker-gha"
  pull_request:
    branches:
      - "master"

jobs:
  # Builds base image for stempy of various verions if Dockerfile.base has changed
  build-base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - version: stempy
            tag-suffix: -conda-jammy
          - version: stempy-mpi
            tag-suffix: -conda
          - version: stempy-mpi
            tag-suffix: -conda-jammy

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - 
        name: 'Setup Docker Environment'
        uses: ./.github/actions/docker_setup
        with:
          github_event_name: ${{ github.event_name }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_ORG: ${{ vars.DOCKERHUB_ORG }}
      -
        name: Determine if Dockerfile.base changed
        id: changed-dockerfile-base
        uses: tj-actions/changed-files@v35
        with:
          files: |
            docker/${{ matrix.version }}${{ matrix.tag-suffix}}/Dockerfile.base
      -
        name: Build/push Dockerfile.base
        uses: docker/build-push-action@v3
        if: ${{ contains(github.event.head_commit.message, 'trigger-ci') || steps.changed-dockerfile-base.outputs.any_changed == 'true'}}
        with:
          context: .
          file: ./docker/${{ matrix.version }}${{ matrix.tag-suffix}}/Dockerfile.base
          push: ${{ github.event_name != 'pull_request' }}
          build-args: | 
                      DOCKERFILE_SUBDIR=${{ matrix.version }}${{ matrix.tag-suffix}}
          tags: ${{ env.DOCKERHUB_ORG }}/${{ matrix.version }}-base:latest${{ matrix.tag-suffix }}
          cache-to: type=gha
          cache-from: type=gha,mode=max


# Builds stempy every time after build-base is done
  build-stempy:
    runs-on: ubuntu-latest
    needs: [build-base]
    strategy:
      matrix:
        include:
          - version: stempy
            tag-suffix: -conda-jammy
          - version: stempy
            tag-suffix: -conda-jammy
            notebook: -ipykernel
          - version: stempy-mpi
            tag-suffix: -conda
          - version: stempy-mpi
            tag-suffix: -conda-jammy

      fail-fast: false
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - 
        name: 'Setup Docker Environment'
        uses: ./.github/actions/docker_setup
        with:
          github_event_name: ${{ github.event_name }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_ORG: ${{ vars.DOCKERHUB_ORG }}
      -
        name: Build/push ${{ matrix.version }}${{matrix.notebook}}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/${{ matrix.version }}${{ matrix.tag-suffix}}/Dockerfile.stempy${{matrix.notebook}}
          build-args: | 
                      DOCKERFILE_SUBDIR=${{ matrix.version }}${{ matrix.tag-suffix}}
                      DOCKERHUB_ORG=${{ env.DOCKERHUB_ORG }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKERHUB_ORG }}/${{ matrix.version }}${{matrix.notebook}}:latest${{ matrix.tag-suffix}}

  # Seperate job for building original version
  build-stempy-old:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - version: stempy
            MPI: OFF
          - version: stempy-mpi
            MPI: ON
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - 
        name: 'Setup Docker Environment'
        uses: ./.github/actions/docker_setup
        with:
          github_event_name: ${{ github.event_name }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_ORG: ${{ vars.DOCKERHUB_ORG }}
      
      - # Building base versions using original dockerfile
        name: Build/push ${{ matrix.version }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKERHUB_ORG }}/${{ matrix.version }}:latest
          build-args: |
                      MPI=${{ matrix.MPI }}
          cache-to: type=gha
          cache-from: type=gha, mode=max
      
      - # Building ipykernel
        name: Build/push ${{ matrix.version }}-ipykernel
        if: ${{ matrix.version == 'stempy' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile.ipykernel
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKERHUB_ORG }}/${{ matrix.version }}-ipykernel:latest